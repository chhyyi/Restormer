# general settings
name: sb0902_LinNorm_mean0.5std0.5
model_type: ImageCleanModel
scale: 1
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 100

# dataset and data loader settings
datasets:
  train:
    name: TrainSet
    type: Dataset_MultAbrr
    dataroot_gt: shared/sb0902/train/gt
    dataroot_lq: shared/sb0902/train/abrr
    geometric_augs: true

    filename_tmpl: '{}'
    io_backend:
      type: disk

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 1
    batch_size_per_gpu: 1


    ### -------------Progressive training--------------------------
    mini_batch_sizes: [8,5,4,2,1,1]             # Batch size per gpu   
    iters: [92000,64000,48000,36000,36000,24000]
    gt_size: 348   # Max patch size for progressive training
    gt_sizes: [128,160,192,256,320,344]  # Patch sizes for progressive training.
    ### ------------------------------------------------------------

    ### ------- Training on single fixed-patch size 128x128---------
    # mini_batch_sizes: [8]   
    # iters: [300000]
    # gt_size: 128   
    # gt_sizes: [128]
    ### ------------------------------------------------------------

    dataset_enlarge_ratio: 1
    prefetch_mode: ~

    # params for Dataset_MultAbrr
    ds_type: AberratedDataset
    dataset_path: shared/sb0902 #dataset_path = Path(r"D:\MINST28x28")
    gt_path: gt
    abrr_path: abrr
    abrr_inputs: 10
    dtype: float32
    train_test_split_ratio: ~
    input_channels: 1
    maxlen: 4950
    resize_to: ~
    crop_to: 592
    abrr_imgs_number: 10
    dset_mode: fixed
    gt_size: 384
    geometric_augs: true
    normalize: LinNorm_0.5mean0.5std_inoutsep
    mean_gt: 35153.57765919851
    std_gt: 4640.667693526714
    mean_input: 35153.577658747476
    std_input: 3855.4546153602205



  val:
    name: ValSet
    type: Dataset_MultAbrr
    dataroot_gt: shared/sb0902/test/gt
    dataroot_lq: shared/sb0902/test/abrr
    io_backend:
      type: disk

    # params for Dataset_MultAbrr
    ds_type: AberratedDataset
    dataset_path: shared/sb0902 #dataset_path = Path(r"D:\MINST28x28")
    gt_path: gt
    abrr_path: abrr
    abrr_inputs: 10
    dtype: float32
    train_test_split_ratio: ~
    input_channels: 1
    maxlen: 4950
    resize_to: ~
    crop_to: 592
    abrr_imgs_number: 10
    dset_mode: fixed
    gt_size: 384
    geometric_augs: true
    normalize: LinNorm_0.5mean0.5std_inoutsep
    mean_gt: 35153.57765919851
    std_gt: 4640.667693526714
    mean_input: 35153.577658747476
    std_input: 3855.4546153602205

# network structures
network_g:
  type: Restormer
  inp_channels: 1
  out_channels: 1
  dim: 48
  num_blocks: [4,6,6,8]
  num_refinement_blocks: 4
  heads: [1,2,4,8]
  ffn_expansion_factor: 2.66
  bias: False
  LayerNorm_type: BiasFree
  dual_pixel_task: False


# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  total_iter: 300000
  warmup_iter: -1 # no warm up
  use_grad_clip: true

  # Split 300k iterations into two cycles. 
  # 1st cycle: fixed 3e-4 LR for 92k iters. 
  # 2nd cycle: cosine annealing (3e-4 to 1e-6) for 208k iters.
  scheduler:
    type: CosineAnnealingRestartCyclicLR
    periods: [92000, 208000]       
    restart_weights: [1,1]
    eta_mins: [0.0003,0.000001]   
  
  mixing_augs:
    mixup: true
    mixup_beta: 1.2
    use_identity: true

  optim_g:
    type: AdamW
    lr: !!float 3e-4
    weight_decay: !!float 1e-4
    betas: [0.9, 0.999]
  
  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1
    reduction: mean

# validation settings
val:
  window_size: 8
  val_freq: !!float 4e3
  save_img: false
  rgb2bgr: true
  use_image: false
  max_minibatch: 8

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: !!float 1e3
  save_checkpoint_freq: !!float 4e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
